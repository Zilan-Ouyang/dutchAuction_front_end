{"version":3,"sources":["UseWeb3.js","components/LogInButton.js","pages/Home.js","components/LeftSidebar.js","components/BuyActivity.js","components/SellActivity.js","components/CurrentTradeInSell.js","components/CurrentTradeInBuy.js","pages/Dashboard.js","blockchain/index.js","components/Auc.js","pages/WatchList.js","components/Navigationbar.js","actions/createAuction.js","actions/types.js","pages/CreateIpo.js","pages/Research.js","pages/Bid.js","components/DisputeAuc.js","pages/ClientBids.js","components/Transfer.js","pages/ClientAuction.js","reducers/createNewAucReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["networkNameLookup","1","3","4","5","42","useWeb3","opts","determineStatus","_React$useState","React","useState","status","_React$useState2","Object","slicedToArray","state","setState","initedRef","useRef","_ref","asyncToGenerator","regenerator_default","a","mark","_callee2","getAccount","installState","enable","wrap","_context2","prev","next","address","window","web3","eth","accounts","toLowerCase","networkId","version","network","networkName","concat","extra","account","JSON","stringify","objectSpread","abrupt","length","ethereum","_ref2","_callee","_context","t0","onEnableError","console","log","stop","apply","this","arguments","_metamask","isUnlocked","sent","isApproved","current","useEffect","intervalHandle","setInterval","clearInterval","MetamaskStatus","w3","react_default","createElement","Web3Info","props","Button","variant","index_es","icon","faSignInAlt","onClick","LogInButton","Jumbotron","Home","Image","src","className","Container","Row","Col","xs","sm","smOffset","components_LogInButton","Component","LeftSidebar","id","Badge","faStoreAlt","faFileAlt","faListOl","href","faHistory","faStamp","faEnvelope","faQuestionCircle","BuyActivity","datasets","data","backgroundColor","values","getLabelsAndColors","labels","keys","responsive","maintainAspectRatio","position","Red","Blue","Yellow","getData","fluid","es","width","height","options","getOptions","legend","getLegend","SellActivity","CurrentTradeInSell","Table","CurrentTradeInBuy","Dashboard","e","preventDefault","location","reload","Modal","Dialog","Header","Title","faHeartBroken","Body","Footer","handleClick","LeftSidebar_LeftSidebar","components_BuyActivity","CurrentTradeInSell_CurrentTradeInSell","CurrentTradeInBuy_CurrentTradeInBuy","components_SellActivity","BlockchainClient","classCallCheck","provider","ethers","providers","Web3Provider","currentProvider","signer","getSigner","auctionContract","Contract","ContractABI","uid","disputeDurationLength","shares","offerPrice","newAuction","txHash","hash","amount","deposit","value","bidding","price","setPrice","transfer","blockchain","CreateAuc","_this","possibleConstructorReturn","getPrototypeOf","call","name","description","units","isDeposited","isBidded","isUpdated","handleChange","bind","assertThisInitialized","handleChange2","handleChange3","handleClick2","handleClick3","parseInt","target","_this2","then","res","_this3","localStorage","setItem","info","fetch","method","headers","content-type","body","_this4","_this5","Card","style","Text","ListGroup","ListGroupItem","InputGroup","onSubmit","FormControl","onChange","placeholder","aria-describedby","Append","type","faPenSquare","Link","faWallet","md","span","offset","faHandHoldingUsd","WatchList","Auc","LoggedInfo","Navigationbar","Navbar","bg","expand","sticky","Brand","faTimes","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","Item","eventKey","faChartBar","faFlask","Divider","faCoins","faPlusSquare","faChartLine","faUser","showAuctions","dispatch","json","auctions","shift","payload","CreateIpo","routeChange","auction","createAuction","defineProperty","history","push","Form","Group","as","controlId","Label","Control","Check","label","connect","auctionData","withRouter","Research","Bid","auctionItems","filter","item","map","key","CardDeck","items","DisputeAuc","aria-label","faSortNumericUpAlt","faPlus","size","block","ClientBids","disputeItems","components_DisputeAuc","display","justifyContent","paddingTop","Transfer","isClicked","unitsBidded","getItem","ClientAuction","transferItems","Transfer_Transfer","initialState","rootReducers","combineReducers","undefined","action","middelWare","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","App","react_redux_es","react_router_dom","components_Navigationbar","react_router","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab4cd2c7.chunk.js","sourcesContent":["import React from 'react';\n\nconst networkNameLookup = {\n    1: 'mainnet',\n    3: 'ropsten',\n    4: 'rinkeby',\n    5: 'goerli',\n    42: 'kovan',\n};\n\nexport function useWeb3(opts) {\n    let [state, setState] = React.useState({ status: 'LOADING', });\n    let initedRef = React.useRef();\n\n    let determineStatus; determineStatus = async () => {\n        let getAccount = () => {\n            let address = window.web3.eth.accounts[0].toLowerCase();\n            let networkId = window.web3.version.network;\n            let networkName = networkNameLookup[networkId] || `unknown(${networkId})`;\n\n            return { address, networkId, networkName, };\n        };\n\n        let installState = (status, extra) => {\n            if (status === 'READY') {\n                let account = getAccount();\n                if (status !== state.status || JSON.stringify(account) !== JSON.stringify(state.account)) {\n                    setState({ status, account, ...extra, });\n                }\n            } else {\n                if (status !== state.status) {\n                    setState({ status, ...extra, });\n                }\n            }\n        };\n\n        if (!window.web3) return installState('NO_WEB3');\n\n        if (window.web3.eth.accounts.length > 0) return installState('READY');\n\n        if (window.ethereum) {\n            let enable = async () => {\n                try {\n                    await window.ethereum.enable();\n                } catch(e) {\n                    if (opts.onEnableError) opts.onEnableError(e);\n                    else console.log(\"Enable error: \" + e);\n                }\n\n                determineStatus();\n            };\n\n            if (window.ethereum._metamask) {\n                let isUnlocked = await window.ethereum._metamask.isUnlocked();\n                if (!isUnlocked) return installState('LOCKED', { enable, });\n\n                let isApproved = await window.ethereum._metamask.isApproved();\n                if (!isApproved) return installState('NOT_ENABLED', { enable, });\n\n                await enable();\n            } else {\n                return installState('NOT_ENABLED', { enable, });\n            }\n        } else {\n            // Old dApp browsers without window.ethereum\n            return installState('LOCKED');\n        }\n    };\n\n    if (!initedRef.current) {\n        initedRef.current = true;\n        determineStatus();\n    }\n\n    React.useEffect(() => {\n        let intervalHandle = setInterval(determineStatus, 1000);\n        return () => clearInterval(intervalHandle);\n    });\n\n    return state;\n}\n","import React from 'react';\nimport { useWeb3 } from '../UseWeb3';\nimport {Button, Jumbotron } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignInAlt} from '@fortawesome/free-solid-svg-icons';\n\nfunction MetamaskStatus() {\n  let w3 = useWeb3();\n  console.log(w3); // look in your JS console\n  return <div>status = {w3.status}</div>;\n}\n\nfunction Web3Info(props) {\nlet w3 = useWeb3();\n\nif (w3.status === 'READY') {\n    return <div>\n        <span>Your address: {w3.account.address}</span>\n        <div>Your network ID: {w3.account.networkId}</div>\n        <div>Your network Name: {w3.account.networkName}</div>\n    </div>;\n} else {\n    return (<div>\n              <span>web3 not ready: {w3.status}</span>\n              <Button variant=\"success\"><FontAwesomeIcon icon={faSignInAlt} onClick={()=> w3.enable()}/> Connect To Log In</Button>\n          </div>)\n}\n}\n\n\n\nfunction LogInButton() {\n    return (\n      <div>\n        <Jumbotron>\n                    <h1>Auxion. Where every day is auction day!</h1>\n                    <p>\n                        Connect with MetaMask to begin your auxion journey!\n                    </p>\n                    <p>\n                        <MetamaskStatus/>\n                        <Web3Info />\n                    </p>\n                </Jumbotron>\n      </div>\n      )\n}\n\nexport default LogInButton;","import React, { Component } from 'react';\nimport { Container, Row, Col, Image } from 'react-bootstrap';\nimport './Home.scss';\nimport LogInButton from '../components/LogInButton'\n\nclass Home extends Component {\n    render() {\n        //https://www.investopedia.com/investing/tips-for-investing-in-ipos/\n        return (\n            <div>\n               <Image src=\"assets\\main_banner4.jpg\" className=\"header-image\" />\n                <Container>\n                    <Row>\n                        <Col xs={4} sm={5} smOffset={2}>\n                            <h1>You Are The Auction</h1>\n                            <p>Auxion is a revolutionary decentralized IPO pricing tool and dutch auctioning system designed to be as cost efficient as your business needs.</p>\n                            <p>It gives issuing company the power to launch live, real-time dutch auctions from the palm of their hands. IPO investor can also enjoy full end-to-end service from anywhere with lower entry barrier than with the traditional IPOs.</p>\n                        </Col>\n                        <Col xs={4} sm={7} >\n                            <Image className=\"body-image\" src='assets\\banner_laptop2.png'/>\n                        </Col> \n                        \n                    </Row>\n                </Container>\n                <hr>\n                </hr> \n                <Container>\n                    <Row>\n                        <Col xs={4} sm={7} >\n                            <Image className=\"body-image\" src='assets\\dutch-auction-clock.jpg'/>\n                        </Col> \n                        <Col xs={4} sm={5} smOffset={2}>\n                            <h1>What is Dutch Auction? </h1>\n                            <br></br>\n                            <p>Dutch Auctions date to the 17th-century flower market and are sometimes referred to as uniform price auctions. In this type of auction, bidding starts at a high selling price and decreases over time. With each price decrement, buyers place bids for the quantity (or volume) they wish to purchase.</p>\n                            <p>We use dutch auction as a method for pricing shares (in an initial public offering) whereby the price of the shares offered is lowered until there are enough bids to sell all shares.</p>\n                            <p>With each round of bidding, a buyer has the opportunity to place a bid at a new lower price. However, buyers are encouraged to place their bids early as the action could end at any point.</p>\n                        </Col>\n                    </Row>\n                </Container>\n                <hr></hr>\n                <Container>\n                    <Row><h1>Research Tool</h1></Row>\n                </Container>\n                <hr></hr>\n                <Container>\n                    <Row><h1>Your Dashboard</h1></Row>\n                </Container>\n                <hr>\n                </hr>\n                <Container className=\"last-container\">\n                    <LogInButton/>\n                </Container>\n            </div>\n        )\n    }\n}\nexport default Home;","import React, { Component } from 'react'\nimport './LeftSidebar.scss';\nimport {Badge} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStoreAlt,  faFileAlt, faListOl, faHistory, faStamp, faEnvelope, faQuestionCircle} from '@fortawesome/free-solid-svg-icons'\n\nexport default class LeftSidebar extends Component {\n    render() {\n        return (\n            <div id=\"sidebar-container\">\n                <ul className=\"sidebar navbar-nav\" >\n                        <div className=\"navigation-type\">\n                        <li >\n                            <Badge variant=\"light\" className=\"nav-item\">\n                                <FontAwesomeIcon icon={faStoreAlt }/>\n                                <span> DASHBOARD</span>\n                            </Badge>\n                        </li>\n                        <li >\n                            <Badge variant=\"light\" className=\"nav-item\">\n                            <FontAwesomeIcon icon={faFileAlt }/>\n                                <span> INVOICES</span>\n                            </Badge>\n                        </li>\n                        <li >\n                            <Badge variant=\"light\" className=\"nav-item\">\n                            <FontAwesomeIcon icon={faListOl }/>\n                                <a href=\"/clientBids\"> DISPUTE</a>\n                            </Badge>\n                        </li>\n                        <li >\n                            <Badge variant=\"light\" className=\"nav-item\">\n                            <FontAwesomeIcon icon={faHistory }/>\n                                <a href='/bid'> BIDS</a>\n                            </Badge>\n                        </li>\n                        <li >\n                            <Badge variant=\"light\" className=\"nav-item\">\n                            <FontAwesomeIcon icon={faStamp }/>\n                                <a href='/clientAuction'> SETTLEMENT</a>\n                            </Badge>\n                        </li>\n\n                        </div>\n                        \n                        <div className=\"other-containt\">\n                            <Badge variant=\"light\" className=\"nav-item\">\n                            <FontAwesomeIcon icon={faEnvelope }/>\n                                <span> CONTACT</span>\n                            </Badge>\n                        \n                            <Badge variant=\"light\" className=\"nav-item\">\n                            <FontAwesomeIcon icon={faQuestionCircle }/>\n                                <span> SUPPORT</span>\n                            </Badge>\n                        </div>\n                    </ul>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport './Activity.scss';\nimport {Jumbotron} from \"react-bootstrap\"\n class BuyActivity extends Component {\n    getData(){\n        return {\n            datasets: [{\n                data: [10, 20, 30],\n                backgroundColor: Object.values(this.getLabelsAndColors())\n            }],\n            labels: Object.keys(this.getLabelsAndColors())\n        };\n    }\n\n    getOptions(){\n        return {\n            responsive: true,\n            maintainAspectRatio: true\n        }\n    }\n\n    getLegend(){\n        return {\n            position: 'bottom'\n        };\n    }\n\n    getLabelsAndColors() {\n        return {\n            'Red': '#FF6384',\n            'Blue': '#36A2EB',\n            'Yellow': '#FFCE56'\n        }\n    }\n\n    render(){\n        let data = this.getData();\n        return (\n            <Jumbotron fluid>\n                <div className=\"doughnut-container\">\n                    <div className=\"doughnut-wrapper\">\n                        <h3 className=\"activity-title\">Bid Activity</h3>\n                        <Doughnut\n                            data={data}\n                            width={300}\n                            height={300}\n                            options={this.getOptions()}\n                            legend={this.getLegend()}\n                        />\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default BuyActivity;\n","import React, { Component } from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport './Activity.scss';\nimport {Jumbotron} from \"react-bootstrap\"\n class SellActivity extends Component {\n    getData(){\n        return {\n            datasets: [{\n                data: [10, 20, 30],\n                backgroundColor: Object.values(this.getLabelsAndColors())\n            }],\n            labels: Object.keys(this.getLabelsAndColors())\n        };\n    }\n\n    getOptions(){\n        return {\n            responsive: true,\n            maintainAspectRatio: true\n        }\n    }\n\n    getLegend(){\n        return {\n            position: 'bottom'\n        };\n    }\n\n    getLabelsAndColors() {\n        return {\n            'Red': '#FF6384',\n            'Blue': '#36A2EB',\n            'Yellow': '#FFCE56'\n        }\n    }\n\n    render(){\n        let data = this.getData();\n        return (\n            <Jumbotron fluid>\n                <div className=\"doughnut-container\">\n                    <div className=\"doughnut-wrapper\">\n                        <h3 className=\"activity-title\">Sell Activity</h3>\n                        <Doughnut\n                            data={data}\n                            width={300}\n                            height={300}\n                            options={this.getOptions()}\n                            legend={this.getLegend()}\n                        />\n                    </div>\n                </div>\n            </Jumbotron>\n        );\n    }\n}\n\nexport default SellActivity;\n","import React, { Component } from 'react'\nimport {Jumbotron, Button, Badge, Table} from \"react-bootstrap\"\nexport default class CurrentTradeInSell extends Component {\n    render() {\n        return (\n            <div>\n                \n                <Jumbotron>\n                    <h3>Current Trades in Sell</h3>\n                    <hr></hr>\n                    <Table>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <Button variant=\"primary\">Active  <Badge variant=\"light\">9</Badge></Button>\n                                </td>\n                                <td>\n                                    <Button variant=\"warning\">Pending  <Badge variant=\"light\">8</Badge></Button>\n                                </td>\n                                <td>\n                                    <Button variant=\"success\">Closing   <Badge variant=\"light\">6</Badge></Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                    {/* Auction <Button variant=\"primary\">\n                     Alive <Badge variant=\"light\">9</Badge>\n                    <span className=\"sr-only\">unread messages</span>\n                    </Button> */}\n                </Jumbotron>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport {Jumbotron, Button, Badge, Table} from \"react-bootstrap\"\nexport default class CurrentTradeInBuy extends Component {\n    render() {\n        return (\n            <div>\n                \n                <Jumbotron>\n                    <h3>Current Trades in Buy</h3>\n                    <hr></hr>\n                    <Table>\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <Button variant=\"primary\">Active   <Badge variant=\"light\">9</Badge></Button>\n                                </td>\n                                <td>\n                                    <Button variant=\"warning\">Pending <Badge variant=\"light\">8</Badge></Button>\n                                </td>\n                                <td>\n                                    <Button variant=\"secondary\">Closing  <Badge variant=\"light\">6</Badge></Button>\n                                </td>\n                                <td>\n                                    <Button variant=\"success\">Won  <Badge variant=\"light\">6</Badge></Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Jumbotron>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHeartBroken} from '@fortawesome/free-solid-svg-icons';\nimport {Modal, Button, Container, Row, Col} from 'react-bootstrap';\nimport LeftSidebar from '../components/LeftSidebar';\nimport BuyActivity from '../components/BuyActivity';\nimport SellActivity from '../components/SellActivity';\nimport CurrentTradeInSell from '../components/CurrentTradeInSell';\nimport CurrentTradeInBuy from '../components/CurrentTradeInBuy'\n\nclass Dashboard extends Component {\n    \n    handleClick(e){\n        e.preventDefault();\n        window.location.reload();\n    }\n    render() {\n        if (window.web3.eth.accounts.length===0) {\n            return (<div>\n                        <Modal.Dialog>\n                        <Modal.Header>\n                            <Modal.Title>Sorry something went wrong <FontAwesomeIcon icon={faHeartBroken}/></Modal.Title>\n                        </Modal.Header>\n        \n                        <Modal.Body>\n                            <p>Please log in with your metamask wallet to check dashboard.</p>\n                        </Modal.Body>\n        \n                        <Modal.Footer>\n                            <Button variant=\"primary\" onClick={this.handleClick}>Proceed</Button>\n                        </Modal.Footer>\n                    </Modal.Dialog>\n                    </div>)\n        }\n\n        else{\n            return(\n                <div className=\"dash-div\">\n                    <LeftSidebar />\n                    <Container >\n                        \n                        <Row className=\"dash-con\">\n                            <Col xs={3}>\n                                <BuyActivity />\n                            </Col>\n                            <Col xs={6}>\n                                <CurrentTradeInSell />\n                                <CurrentTradeInBuy />\n                            </Col>\n                            <Col xs={3}>\n                                 <SellActivity />\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Dashboard;\n","import { ethers } from 'ethers'\nimport ContractABI from './abi/contract.json'\n\n\nexport default class BlockchainClient {\n\n    constructor(){\n\n        window.ethereum.enable()\n        this.provider = new ethers.providers.Web3Provider(window.web3.currentProvider)\n        this.signer = this.provider.getSigner()\n        this.auctionContract = new ethers.Contract(\"0x93ffd6577bc6635230b92d5fe4efe9fbfc544c1d\", ContractABI, this.signer)\n    }\n\n    async newAuction(uid,disputeDurationLength, shares, offerPrice) {\n        let txHash = await this.auctionContract.newAuction(uid,disputeDurationLength, shares, offerPrice);\n        // console.log(txHash);\n        return txHash.hash;\n    }\n\n    async deposit(uid, amount) {\n        let txHash = await this.auctionContract.deposit(uid, {value: amount});\n        return txHash.hash\n    }\n\n    async bidding(uid, shares){\n        let txHash = await this.auctionContract.bidding(uid, shares);\n        return txHash.hash\n    }\n\n    async setPrice(uid, price){\n        let txHash = await this.auctionContract.setPrice(uid, price);\n        return txHash.hash\n    }\n\n    async transfer(uid) {\n        let txHash = await this.auctionContract.transfer(uid);\n        return txHash.hash\n    }\n\n}","import React, { Component } from 'react'\nimport {Card, ListGroup, ListGroupItem, Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPenSquare, faHandHoldingUsd, faWallet} from '@fortawesome/free-solid-svg-icons';\nimport BlockchainClient from \"../blockchain\";\n\nconst blockchain = new BlockchainClient();\n\nclass CreateAuc extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            uid: props.uid,\n            name: props.name,\n            description: props.description,\n            shares: props.shares,\n            offerPrice: props.offerPrice,\n            deposit: \"\",\n            units: \"\",\n            isDeposited: false,\n            isBidded: false,\n            isUpdated: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleChange2 = this.handleChange2.bind(this);\n        this.handleChange3= this.handleChange3.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClick2 = this.handleClick2.bind(this);\n        this.handleClick3 = this.handleClick3.bind(this);\n    }\n    handleChange(e){\n        this.setState({deposit: parseInt(e.target.value)});\n    }\n    handleChange2(e){\n        this.setState({units: parseInt(e.target.value)})\n    }\n    handleChange3(e){\n        this.setState({offerPrice: parseInt(e.target.value)})\n    }\n    handleClick(e){\n        e.preventDefault();\n        console.log(this.state.deposit)\n        console.log(this.state.uid)\n        blockchain.deposit(this.state.uid, this.state.deposit).then(res=>{\n            console.log(res);\n            this.setState({isDeposited: true});\n            console.log(this.state.isDeposited)\n        })\n    }\n    \n    handleClick2(e){\n        e.preventDefault();\n        blockchain.bidding(this.state.uid, this.state.units).then(res =>{\n            console.log(res);\n            //console.log(this.state.nonce,this.state.shares )\n            this.setState({isBidded: true, shares: this.state.shares-this.state.units})\n            localStorage.setItem('units', this.state.units);\n            //     uid: this.state.uid,\n            //     shares: this.state.shares-this.state.units\n            // }\n            console.log(this.state.shares)\n            let info ={ uid: this.state.uid, shares: this.state.shares}\n            fetch('https://us-central1-dutchauction-6abd7.cloudfunctions.net/updateShares', {\n                method: 'POST',\n                headers: {'content-type': \"application/json\"},\n                body:JSON.stringify(info)\n            })\n            .then(res=> console.log(res))\n            //.then(result => console.log(result))\n        })\n    }\n\n    handleClick3(e){\n        e.preventDefault();\n        this.setState({offerPrice: parseInt(e.target.value)})\n        blockchain.setPrice(this.state.uid, this.state.offerPrice).then(res => console.log(res));\n        this.setState({offerPrice: this.state.offerPrice});\n        let info = { uid: this.state.uid, offerPrice: this.state.offerPrice}\n        fetch('https://us-central1-dutchauction-6abd7.cloudfunctions.net/updatePrice', {\n                method: 'POST',\n                headers: {'content-type': \"application/json\"},\n                body:JSON.stringify(info)\n            })\n            .then(res=> {console.log(res); this.setState({isUpdated: true})})\n            //.then(result => console.log(result))\n\n    }\n    render() {\n\n        return (          \n            <div>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Item Name:{this.state.name}</Card.Title>\n                        <Card.Title>Item ID:{this.state.uid}</Card.Title>\n                        <Card.Text>\n                        {this.state.description}\n                        </Card.Text>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem><Row><Col><h6>Units On Sale:</h6></Col><Col>{this.state.shares}</Col></Row></ListGroupItem>\n                        <ListGroupItem><Row><Col><h6>Current Price:</h6></Col><Col>{this.state.offerPrice}</Col></Row></ListGroupItem>\n                        <ListGroupItem>\n                            <h6>Update Price:</h6>\n                            {this.state.isUpdated ? (<div>Price updated!</div>): (\n                                <InputGroup className=\"mb-3\" onSubmit={e => this.handleClick3(e)}>\n                                    <FormControl\n                                    // value={this.state.offerPrice} \n                                    onChange={this.handleChange3}\n                                    placeholder=\"Seller Only\"\n                                    name=\"offerPrice\"\n                                    aria-describedby=\"basic-addon2\"\n                                    />\n                                    <InputGroup.Append>\n                                        <Button type=\"submit\" value='Submit' variant=\"outline-secondary\" onClick={(e)=>this.handleClick3(e)}><FontAwesomeIcon icon={faPenSquare}/></Button>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                             )} \n                        </ListGroupItem>\n                    </ListGroup>\n                    <Card.Body>\n                        <Row>\n                            <Col><Card.Link href=\"https://www.kijiji.ca/v-bed-mattress/city-of-toronto/hemnes-double-full-bed-frame-ikea/1452639868?enableSearchNavigationFlag=true\">more</Card.Link></Col>\n                            <Col>\n                                {this.state.isDeposited ? (<div>you deposited: {this.state.deposit}</div>): (\n                                    <InputGroup className=\"mb-3\" onSubmit={e => this.handleClick(e)}>\n                                        <FormControl\n                                        value={this.state.deposit} \n                                        onChange={this.handleChange}\n                                        placeholder=\"deposit\"\n                                        name=\"deposit\"\n                                        aria-describedby=\"basic-addon2\"\n                                        />\n                                        <InputGroup.Append>\n                                        <Button type=\"submit\" value='Submit' variant=\"outline-secondary\" onClick={(e)=>this.handleClick(e)}><FontAwesomeIcon icon={faWallet}/></Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                )}   \n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col md={{ span: 6, offset: 6 }}>\n                            {this.state.isBidded ? (<div>Success!</div>): (\n                                <InputGroup className=\"mb-3\" onSubmit={e => this.handleClick2(e)}>\n                                    <FormControl\n                                    value={this.state.units} \n                                    onChange={this.handleChange2}\n                                    placeholder=\"units\"\n                                    name=\"units\"\n                                    aria-describedby=\"basic-addon2\"\n                                    />\n                                    <InputGroup.Append>\n                                        <Button type=\"submit\" value='Submit' variant=\"outline-secondary\" onClick={(e)=>this.handleClick2(e)}><FontAwesomeIcon icon={faHandHoldingUsd}/></Button>\n                                    </InputGroup.Append>\n                                </InputGroup>\n                                )}\n                            </Col>\n                        </Row>\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">Initiated by Auxion Corp</small>\n                    </Card.Footer>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default CreateAuc;","import React, { Component } from 'react'\nimport CreateAuc from '../components/Auc'\nexport default class WatchList extends Component {\n    render() {\n        return (\n            <div>\n                <CreateAuc />\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faPlusSquare, faChartLine, faCoins, faChartBar, faFlask, faUser} from '@fortawesome/free-solid-svg-icons'\nimport { useWeb3 } from '../UseWeb3';\nimport './Navigationbar.scss'\n\n  function LoggedInfo(props) {\n    let w3 = useWeb3();\n    \n    if (w3.status === 'READY') {\n      return(\n        <div>\n          {w3.account.address}\n        </div>\n      )\n    } else {\n        return (<div>\n                  Not Log In\n              </div>)\n    }\n    }\n    \n   function Navigationbar(){\n        return (\n            <Navbar bg=\"light\" expand=\"lg\" sticky=\"top\">\n            <Navbar.Brand href=\"/\">Au<FontAwesomeIcon icon={faTimes }/>ion</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"ml-auto\">\n              \n                <NavDropdown title=\"More\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item eventKey='1' href=\"/aution\"><FontAwesomeIcon icon={faChartBar }/> Watch List</NavDropdown.Item>\n                  <NavDropdown.Item eventKey='2' href=\"/research\"><FontAwesomeIcon icon={faFlask }/> Research</NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item eventKey='3' href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown>\n                <Nav.Link href=\"/bid\"><FontAwesomeIcon icon={faCoins }/> Bid</Nav.Link>\n                <Nav.Link href=\"/createipo\"><FontAwesomeIcon icon={faPlusSquare }/>  Create </Nav.Link>\n                <Nav.Link href=\"/dashboard\"><FontAwesomeIcon icon={faChartLine }/>  Dashboard  </Nav.Link>\n                <Navbar.Text><FontAwesomeIcon icon={faUser}/>  Signed in as: </Navbar.Text>\n                <Navbar.Text><span className=\"login\"><LoggedInfo/></span></Navbar.Text>\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n            \n        )\n    }\n\n    export default Navigationbar;\n\n","import {CREATE_AUCTION, SHOW_AUCTIONS, UPDATE_AUCTION} from './types';\n\nexport const showAuctions = () => dispatch =>{\n    console.log(\"jey\")\n    fetch('https://us-central1-dutchauction-6abd7.cloudfunctions.net/getAllAuctions')\n    .then(res => res.json())\n    .then(auctions => {\n        auctions.shift()\n        dispatch({\n            type: SHOW_AUCTIONS,\n            payload: auctions\n        })\n    }\n    )\n}\n\n// export const updateAuctionShares = (data) => dispatch => {\n//     fetch('https://us-central1-dutchauction-6abd7.cloudfunctions.net/updateShares', {\n//         method: 'PUT',\n//         headers: {'content-type': \"application/json\"},\n//         body: JSON.stringify(data)\n//     })\n//     .then(res => res.json())\n//     .then(auction => dispatch({\n//         type: UPDATE_AUCTION,\n//         payload: auction\n//     }))\n// }\n\nexport const createAuction = (auctionData) => dispatch => {\n    fetch('https://us-central1-dutchauction-6abd7.cloudfunctions.net/createAuction', {\n        method: 'POST',\n        headers: {'content-type': \"application/json\"},\n        body: JSON.stringify(auctionData)\n    })\n    .then(res=>res.json())\n    .then(auction => dispatch({\n        type: CREATE_AUCTION,\n        payload: auction\n    })) \n}","export const CREATE_AUCTION ='CREATE_AUCTION';\nexport const SHOW_AUCTIONS = 'SHOW_AUCTIONS';\n//export const UPDATE_AUCTION = 'UPDATE_AUCTION';","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport {Form, Button, Col, Container} from 'react-bootstrap';\nimport './Createipo.scss';\nimport BlockchainClient from \"../blockchain\";\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {createAuction} from '../actions/createAuction';\n\nconst blockchain = new BlockchainClient();\n\nclass CreateIpo extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            name: \"\",\n            description: \"\",\n            uid: \"\",\n            disputeDurationLength: \"\",\n            shares: \"\",\n            offerPrice: \"\"\n        }\n        this.handleClick = this.handleClick.bind(this);\n        this.handleChange= this.handleChange.bind(this);\n        this.routeChange= this.routeChange.bind(this);\n    }\n\n    handleClick(e){\n        e.preventDefault();\n        // let uid = 12; //disputeDurationLength, uint256 _shares\n        // let disputeDurationLength = 10;\n        // let shares = 1000;\n        const auction ={\n            name: this.state.name,\n            description: this.state.description,\n            uid: this.state.uid,\n            disputeDurationLength: this.state.disputeDurationLength,\n            shares: this.state.shares,\n            offerPrice: this.state.offerPrice\n        }\n        this.props.createAuction(auction);\n        blockchain.newAuction(this.state.uid, this.state.disputeDurationLength, this.state.shares, this.state.offerPrice).then(res=>{\n            console.log(res);\n            window.location.reload();\n        })\n    }\n    handleChange(e){\n        e.preventDefault();\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    routeChange() {\n        let path = \"/bid\";\n        this.props.history.push(path);\n      }\n    \n    // handleChange2(e){\n    //     e.preventDefault();\n    //     this.setState({isRedirect: !this.state.isRedirect})\n    // }\n    //uint256 uid, uint256 _disputeDurationLength, uint256 _shares, uint256 _offerPrice\n    render() {\n        return (\n            <div>\n                <Container className=\"container\">\n                    <Form onSubmit={e => this.handleClick(e)}>\n                        <Form.Row>\n                            <Form.Group as={Col} sm={4} controlId=\"formGridEmail\">\n                            <Form.Label>Name</Form.Label>\n                            <Form.Control name=\"name\" value={this.state.name} onChange={this.handleChange} placeholder=\"Give your new auction a name\" />\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group controlId=\"formGridAddress1\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control name=\"description\" value={this.state.description} onChange={this.handleChange} placeholder=\"Describe the purpose of your auction\" />\n                        </Form.Group>\n\n                        <Form.Row>\n                            <Form.Group as={Col} controlId=\"formGridUid\">\n                            <Form.Label>Unique ID</Form.Label>\n                            <Form.Control name=\"uid\" value={this.state.uid} onChange={this.handleChange}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridDuration\">\n                            <Form.Label>Dispute Duration</Form.Label>\n                            <Form.Control name=\"disputeDurationLength\" value={this.state.disputeDurationLength} onChange={this.handleChange}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridShares\">\n                            <Form.Label>Units</Form.Label>\n                            <Form.Control name=\"shares\" value={this.state.shares} onChange={this.handleChange}/>\n                            </Form.Group>\n\n                            <Form.Group as={Col} controlId=\"formGridPrice\">\n                            <Form.Label>Starting Price</Form.Label>\n                            <Form.Control name=\"offerPrice\" value={this.state.offerPrice} onChange={this.handleChange}/>\n                            </Form.Group>\n                        </Form.Row>\n\n                        <Form.Group id=\"formGridCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"I accept the Terms of Service\" />\n                        </Form.Group>\n\n                        <Button variant=\"outline-primary\" type=\"submit\" value='Submit' onClick={(e)=>{this.handleClick(e); this.routeChange(e)}}>\n                            Create\n                        </Button>\n                    </Form>\n                </Container>\n            </div>\n        )\n    }\n}\nCreateIpo.propTypes = {\n    createAuction: PropTypes.func.isRequired,\n}\n\nexport default connect(null, {createAuction})(withRouter(CreateIpo));\n","import React, { Component } from 'react'\n\nexport default class Research extends Component {\n    render() {\n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {showAuctions} from '../actions/createAuction';\nimport PropTypes from 'prop-types';\nimport CreateAuc from '../components/Auc';\nimport {Container, Jumbotron, CardDeck} from 'react-bootstrap'\nimport './Bid.scss'\nclass Bid extends Component {\n    componentWillMount(){\n        this.props.showAuctions();\n    }\n    // componentWillReceiveProps(nextProps){\n    //     if(nextProps.newAuction){\n    //         this.props.auction.unshift(nextProps.newAuction);\n    //     }\n    // }\n\n    render(){\n        const auctionItems = this.props.auctions\n        .filter(item => item.shares > 0)\n        .map(auction => (\n            <div key={auction.uid}>\n                <CreateAuc name ={auction.name} uid={auction.uid} description ={auction.description} shares ={auction.shares} offerPrice ={auction.offerPrice}/>\n            </div>\n        ))\n        return (\n            <Container className = \"bid-container\">\n                <Jumbotron>\n                    <CardDeck>\n                        {auctionItems}\n                    </CardDeck>\n                 </Jumbotron>\n             </Container>\n        )\n    }\n    }\n  \n\nBid.propTypes ={\n    showAuctions: PropTypes.func.isRequired,\n    auctions: PropTypes.array.isRequired\n}\nconst mapStateToProps = state => ({\n    auctions: state.auctions.items\n})\n\nexport default connect(mapStateToProps,{showAuctions})(Bid);","import React, { Component } from 'react'\nimport {Card, ListGroup, ListGroupItem, Button, InputGroup, FormControl, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSortNumericUpAlt, faPlus} from '@fortawesome/free-solid-svg-icons';\nclass DisputeAuc extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            uid: props.uid,\n            name: props.name,\n            description: props.description,\n            shares: props.shares,\n            offerPrice: props.offerPrice,\n        };\n    }\n    render() {\n        return (\n            <div>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Item Name:{this.state.name}</Card.Title>\n                        <Card.Text>\n                        {this.state.description}\n                        </Card.Text>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem><Row><Col><h6>Units bidded:</h6></Col><Col>{this.state.shares}</Col></Row></ListGroupItem>\n                        <ListGroupItem><Row><Col><h6>Final Price:</h6></Col><Col>{this.state.offerPrice}</Col></Row></ListGroupItem>\n                        <ListGroupItem>\n                            <Row>\n                                <Col sm={6}>\n                                    <h6>New Nonce:</h6>\n                                </Col>\n                                <Col>\n                                    <InputGroup>\n                                        <FormControl\n                                        placeholder=\"Nonce\"\n                                        aria-label=\"nonce\"\n                                        aria-describedby=\"basic-addon2\"\n                                        />\n                                        <InputGroup.Append>\n                                            <Button variant=\"outline-secondary\"><FontAwesomeIcon icon={faSortNumericUpAlt}/></Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                </Col>\n                            </Row>  \n                            <br></br>\n                            <Row>\n                                <Col sm={6}>\n                                    <h6>Update Unit:</h6>\n                                </Col>\n                                <Col>\n                                    <InputGroup className=\"mb-3\">\n                                        <FormControl\n                                        placeholder=\"unit\"\n                                        aria-label=\"unit\"\n                                        aria-describedby=\"basic-addon2\"\n                                        />\n                                        <InputGroup.Append>\n                                            <Button variant=\"outline-secondary\"><FontAwesomeIcon icon={faPlus}/></Button>\n                                        </InputGroup.Append>\n                                    </InputGroup>\n                                </Col>\n                            </Row>\n                        </ListGroupItem>\n                    </ListGroup>\n                    <Button variant=\"secondary\" size=\"lg\" block type=\"submit\" value='Submit'>Dispute</Button>\n                    <Card.Footer>\n                        <small className=\"text-muted\">Initiated by Auxion Corp</small>\n                    </Card.Footer>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default DisputeAuc;\n","import React, { Component } from 'react';\nimport {Container, Jumbotron, CardDeck} from 'react-bootstrap';\nimport DisputeAuc from '../components/DisputeAuc';\nimport {showAuctions} from '../actions/createAuction';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nclass ClientBids extends Component {\n    componentWillMount(){\n        this.props.showAuctions();\n    }\n    render() {\n        const disputeItems = this.props.auctions\n        .filter(item => item.shares === 0)\n        .map(auction => (\n            <div key={auction.uid}>\n                <DisputeAuc name ={auction.name} uid={auction.uid} description ={auction.description} shares ={auction.shares} offerPrice ={auction.offerPrice}/>\n            </div>\n        ))\n        return (\n            <div>\n                <h3 style={{display: 'flex',justifyContent: 'center', paddingTop: 20}}>Dispute Channel</h3>\n                <hr></hr>\n                <Container className = \"bid-container\">\n                    <Jumbotron>\n                        <CardDeck>\n                            {disputeItems}\n                        </CardDeck>\n                    </Jumbotron>\n                </Container>    \n            </div>\n            \n        )\n    }\n}\n\nClientBids.propTypes ={\n    showAuctions: PropTypes.func.isRequired,\n    auctions: PropTypes.array.isRequired\n}\nconst mapStateToProps = state => ({\n    auctions: state.auctions.items\n})\n\nexport default connect(mapStateToProps,{showAuctions})(ClientBids);\n","import React, { Component } from 'react'\nimport {Card, ListGroup, ListGroupItem, Button, Row, Col } from 'react-bootstrap'\nimport BlockchainClient from \"../blockchain\";\n\nconst blockchain = new BlockchainClient();\nexport default class Transfer extends Component {\n    constructor(props){\n        super(props);\n        this.state = { \n            uid: props.uid,\n            name: props.name,\n            description: props.description,\n            shares: props.shares,\n            offerPrice: props.offerPrice,\n            units: \"\",\n            isClicked: false\n        };\n        this.handleClick = this.handleClick.bind(this);\n    }\n    componentWillMount(){\n        let unitsBidded = localStorage.getItem('units');\n        this.setState({units: unitsBidded});\n    }\n    handleClick(e){\n        e.preventDefault();\n        blockchain.transfer(this.state.uid).then(res=>{\n            console.log(res);\n            this.setState({isClicked: true});\n            console.log(this.state.isClicked)\n        })\n    }\n    render() {\n        return (\n            \n            <div>\n                <Card style={{ width: '18rem' }}>\n                    <Card.Body>\n                        <Card.Title>Item Name:{this.state.name}</Card.Title>\n                        <Card.Text>\n                        Item ID: {this.state.uid}\n                        </Card.Text>\n                    </Card.Body>\n                    <ListGroup className=\"list-group-flush\">\n                        <ListGroupItem><Row><Col><h6>Units bidded:</h6></Col><Col>{this.state.units}</Col></Row></ListGroupItem>\n                        <ListGroupItem><Row><Col><h6>Final Price:</h6></Col><Col>{this.state.offerPrice}</Col></Row></ListGroupItem>\n                    </ListGroup>\n                    {this.state.isClicked ? (<h6>Congratulation!</h6>): (\n                    <Button style={{paddingTop:10}}variant=\"success\" size=\"lg\" block onClick={(e)=>this.handleClick(e)}>Make Payment/Refund</Button>)}\n                    <Card.Footer>\n                        <small className=\"text-muted\">Initiated by Auxion Corp</small>\n                    </Card.Footer>\n                </Card>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport {Container, Jumbotron, CardDeck} from 'react-bootstrap';\nimport Transfer from '../components/Transfer';\nimport {showAuctions} from '../actions/createAuction';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nclass ClientAuction extends Component {\n    componentWillMount(){\n        this.props.showAuctions();\n    }\n    render() {\n        const transferItems = this.props.auctions\n        .filter(item => item.shares === 0)\n        .map(auction => (\n            <div key={auction.uid}>\n                <Transfer name ={auction.name} uid={auction.uid} description ={auction.description} shares ={auction.shares} offerPrice ={auction.offerPrice}/>\n            </div>\n        ))\n        return (\n            <div>\n                <h3 style={{display: 'flex',justifyContent: 'center', paddingTop: 20}}>Settlement Channel</h3>\n                <hr></hr>\n                <Container className = \"bid-container\">\n                    <Jumbotron>\n                        <CardDeck>\n                            {transferItems}\n                        </CardDeck>\n                    </Jumbotron>\n                </Container>    \n            </div>\n        )\n    }\n}\nClientAuction.propTypes ={\n    showAuctions: PropTypes.func.isRequired,\n    auctions: PropTypes.array.isRequired\n}\nconst mapStateToProps = state => ({\n    auctions: state.auctions.items\n})\n\nexport default connect(mapStateToProps,{showAuctions})(ClientAuction);\n","import {CREATE_AUCTION, SHOW_AUCTIONS, UPDATE_AUCTION} from '../actions/types';\n\nconst initialState={\n    items: [],\n    item: {}\n}\n\nexport default function(state=initialState, action){\n    console.log(action.type)\n    switch(action.type){\n        case CREATE_AUCTION:\n            return{\n                ...state,\n                item: action.payload\n            };\n        // case UPDATE_AUCTION:\n        //     return {\n        //         ...state,\n        //         price: action.payload\n        //     }\n        case SHOW_AUCTIONS:\n            //console.log(initialState)`\n            return {\n                ...state,\n                items: action.payload\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport createAuction from './createNewAucReducer';\n\nconst rootReducers = combineReducers({auctions: createAuction});\n\nexport default rootReducers;","import { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './reducers';\nimport thunk from 'redux-thunk';\n\nconst initialState = {};\n\nconst middelWare = [thunk];\n\nconst store = createStore(rootReducer, initialState, compose(applyMiddleware(...middelWare),window.__REDUX_DEVTOOLS_EXTENSION__&& window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nexport default store;","import './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Dashboard from './pages/Dashboard';\nimport WatchList from './pages/WatchList'\nimport Navbar from './components/Navigationbar';\nimport CreateIpo from './pages/CreateIpo';\nimport Research from './pages/Research';\nimport Bid from './pages/Bid';\nimport ClientBids from './pages/ClientBids';\nimport ClientAuction from './pages/ClientAuction';\nimport {Provider} from \"react-redux\";\nimport store from './store'\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <div>\n      <Router>\n      <Navbar />\n        <div>\n          <Switch>\n          <Route path=\"/auction\" component={Home} />\n          <Route path=\"/dashboard\" component={Dashboard} />\n          <Route path=\"/watchlist\" component={WatchList} />\n          <Route path=\"/createipo\" component={CreateIpo} />\n          <Route path=\"/research\" component={Research} />\n          <Route path=\"/bid\" component={Bid} />\n          <Route path='/clientbids' component={ClientBids}/>\n          <Route path='/clientauction' component={ClientAuction}/>\n          </Switch>\n        </div>\n      </Router>\n      </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n// import './bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/css/bootstrap-theme.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}